// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vrp/order.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Amount;
@class AssetPair;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Order_Side

typedef GPB_ENUM(Order_Side) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Order_Side_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Order_Side_Buy = 0,
  Order_Side_Sell = 1,
};

GPBEnumDescriptor *Order_Side_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Order_Side_IsValidValue(int32_t value);

#pragma mark - Enum Order_PriceMode

typedef GPB_ENUM(Order_PriceMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Order_PriceMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Order_PriceMode_Default = 0,
  Order_PriceMode_FixedDecimals = 1,
  Order_PriceMode_AssetDecimals = 2,
};

GPBEnumDescriptor *Order_PriceMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Order_PriceMode_IsValidValue(int32_t value);

#pragma mark - OrderRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface OrderRoot : GPBRootObject
@end

#pragma mark - AssetPair

typedef GPB_ENUM(AssetPair_FieldNumber) {
  AssetPair_FieldNumber_AmountAssetId = 1,
  AssetPair_FieldNumber_PriceAssetId = 2,
};

GPB_FINAL @interface AssetPair : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *amountAssetId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *priceAssetId;

@end

#pragma mark - Order

typedef GPB_ENUM(Order_FieldNumber) {
  Order_FieldNumber_ChainId = 1,
  Order_FieldNumber_SenderPublicKey = 2,
  Order_FieldNumber_MatcherPublicKey = 3,
  Order_FieldNumber_AssetPair = 4,
  Order_FieldNumber_OrderSide = 5,
  Order_FieldNumber_Amount = 6,
  Order_FieldNumber_Price = 7,
  Order_FieldNumber_Timestamp = 8,
  Order_FieldNumber_Expiration = 9,
  Order_FieldNumber_MatcherFee = 10,
  Order_FieldNumber_Version = 11,
  Order_FieldNumber_ProofsArray = 12,
  Order_FieldNumber_Eip712Signature = 13,
  Order_FieldNumber_PriceMode = 14,
};

typedef GPB_ENUM(Order_Sender_OneOfCase) {
  Order_Sender_OneOfCase_GPBUnsetOneOfCase = 0,
  Order_Sender_OneOfCase_SenderPublicKey = 2,
  Order_Sender_OneOfCase_Eip712Signature = 13,
};

GPB_FINAL @interface Order : GPBMessage

@property(nonatomic, readwrite) int64_t chainId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *matcherPublicKey;

@property(nonatomic, readwrite, strong, null_resettable) AssetPair *assetPair;
/** Test to see if @c assetPair has been set. */
@property(nonatomic, readwrite) BOOL hasAssetPair;

@property(nonatomic, readwrite) Order_Side orderSide;

@property(nonatomic, readwrite) int64_t amount;

@property(nonatomic, readwrite) int64_t price;

@property(nonatomic, readwrite) int64_t timestamp;

@property(nonatomic, readwrite) int64_t expiration;

@property(nonatomic, readwrite, strong, null_resettable) Amount *matcherFee;
/** Test to see if @c matcherFee has been set. */
@property(nonatomic, readwrite) BOOL hasMatcherFee;

@property(nonatomic, readwrite) int32_t version;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *proofsArray;
/** The number of items in @c proofsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger proofsArray_Count;

@property(nonatomic, readwrite) Order_PriceMode priceMode;

@property(nonatomic, readonly) Order_Sender_OneOfCase senderOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSData *senderPublicKey;

@property(nonatomic, readwrite, copy, null_resettable) NSData *eip712Signature;

@end

/**
 * Fetches the raw value of a @c Order's @c orderSide property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Order_OrderSide_RawValue(Order *message);
/**
 * Sets the raw value of an @c Order's @c orderSide property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOrder_OrderSide_RawValue(Order *message, int32_t value);

/**
 * Fetches the raw value of a @c Order's @c priceMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Order_PriceMode_RawValue(Order *message);
/**
 * Sets the raw value of an @c Order's @c priceMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOrder_PriceMode_RawValue(Order *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'sender'.
 **/
void Order_ClearSenderOneOfCase(Order *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
