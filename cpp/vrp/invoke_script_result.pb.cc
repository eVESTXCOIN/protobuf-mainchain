// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vrp/invoke_script_result.proto

#include "vrp/invoke_script_result.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace vrp {
PROTOBUF_CONSTEXPR InvokeScriptResult_Payment::InvokeScriptResult_Payment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.amount_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_PaymentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_PaymentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_PaymentDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Payment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_PaymentDefaultTypeInternal _InvokeScriptResult_Payment_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_PrivatePayment::InvokeScriptResult_PrivatePayment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.amount_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_PrivatePaymentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_PrivatePaymentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_PrivatePaymentDefaultTypeInternal() {}
  union {
    InvokeScriptResult_PrivatePayment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_PrivatePaymentDefaultTypeInternal _InvokeScriptResult_PrivatePayment_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_Issue::InvokeScriptResult_Issue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.asset_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.image_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.script_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.amount_)*/int64_t{0}
  , /*decltype(_impl_.decimals_)*/0
  , /*decltype(_impl_.reissuable_)*/false
  , /*decltype(_impl_.nonce_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_IssueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_IssueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_IssueDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Issue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_IssueDefaultTypeInternal _InvokeScriptResult_Issue_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_Reissue::InvokeScriptResult_Reissue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.asset_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.amount_)*/int64_t{0}
  , /*decltype(_impl_.is_reissuable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_ReissueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_ReissueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_ReissueDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Reissue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_ReissueDefaultTypeInternal _InvokeScriptResult_Reissue_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_Burn::InvokeScriptResult_Burn(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.asset_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.amount_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_BurnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_BurnDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_BurnDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Burn _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_BurnDefaultTypeInternal _InvokeScriptResult_Burn_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_SponsorFee::InvokeScriptResult_SponsorFee(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.min_fee_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_SponsorFeeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_SponsorFeeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_SponsorFeeDefaultTypeInternal() {}
  union {
    InvokeScriptResult_SponsorFee _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_SponsorFeeDefaultTypeInternal _InvokeScriptResult_SponsorFee_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_Lease::InvokeScriptResult_Lease(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.lease_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.recipient_)*/nullptr
  , /*decltype(_impl_.amount_)*/int64_t{0}
  , /*decltype(_impl_.nonce_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_LeaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_LeaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_LeaseDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Lease _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_LeaseDefaultTypeInternal _InvokeScriptResult_Lease_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_LeaseCancel::InvokeScriptResult_LeaseCancel(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.lease_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_LeaseCancelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_LeaseCancelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_LeaseCancelDefaultTypeInternal() {}
  union {
    InvokeScriptResult_LeaseCancel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_LeaseCancelDefaultTypeInternal _InvokeScriptResult_LeaseCancel_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_ErrorMessage::InvokeScriptResult_ErrorMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_ErrorMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_ErrorMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_ErrorMessageDefaultTypeInternal() {}
  union {
    InvokeScriptResult_ErrorMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_ErrorMessageDefaultTypeInternal _InvokeScriptResult_ErrorMessage_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_Call_Argument_List::InvokeScriptResult_Call_Argument_List(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_Call_Argument_ListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_Call_Argument_ListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_Call_Argument_ListDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Call_Argument_List _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_Call_Argument_ListDefaultTypeInternal _InvokeScriptResult_Call_Argument_List_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_Call_Argument::InvokeScriptResult_Call_Argument(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct InvokeScriptResult_Call_ArgumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_Call_ArgumentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_Call_ArgumentDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Call_Argument _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_Call_ArgumentDefaultTypeInternal _InvokeScriptResult_Call_Argument_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_Call::InvokeScriptResult_Call(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.args_bytes_)*/{}
  , /*decltype(_impl_.args_)*/{}
  , /*decltype(_impl_.function_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_CallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_CallDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_CallDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Call _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_CallDefaultTypeInternal _InvokeScriptResult_Call_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult_Invocation::InvokeScriptResult_Invocation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.payments_)*/{}
  , /*decltype(_impl_.dapp_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.call_)*/nullptr
  , /*decltype(_impl_.statechanges_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResult_InvocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResult_InvocationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResult_InvocationDefaultTypeInternal() {}
  union {
    InvokeScriptResult_Invocation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResult_InvocationDefaultTypeInternal _InvokeScriptResult_Invocation_default_instance_;
PROTOBUF_CONSTEXPR InvokeScriptResult::InvokeScriptResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_.transfers_)*/{}
  , /*decltype(_impl_.issues_)*/{}
  , /*decltype(_impl_.reissues_)*/{}
  , /*decltype(_impl_.burns_)*/{}
  , /*decltype(_impl_.sponsor_fees_)*/{}
  , /*decltype(_impl_.leases_)*/{}
  , /*decltype(_impl_.lease_cancels_)*/{}
  , /*decltype(_impl_.invokes_)*/{}
  , /*decltype(_impl_.private_payment_)*/{}
  , /*decltype(_impl_.error_message_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InvokeScriptResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvokeScriptResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvokeScriptResultDefaultTypeInternal() {}
  union {
    InvokeScriptResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvokeScriptResultDefaultTypeInternal _InvokeScriptResult_default_instance_;
}  // namespace vrp
static ::_pb::Metadata file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[14];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_vrp_2finvoke_5fscript_5fresult_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_vrp_2finvoke_5fscript_5fresult_2eproto = nullptr;

const uint32_t TableStruct_vrp_2finvoke_5fscript_5fresult_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Payment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Payment, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Payment, _impl_.amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_PrivatePayment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_PrivatePayment, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_PrivatePayment, _impl_.amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.asset_id_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.image_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.amount_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.decimals_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.reissuable_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.script_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Issue, _impl_.nonce_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Reissue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Reissue, _impl_.asset_id_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Reissue, _impl_.amount_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Reissue, _impl_.is_reissuable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Burn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Burn, _impl_.asset_id_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Burn, _impl_.amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_SponsorFee, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_SponsorFee, _impl_.min_fee_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Lease, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Lease, _impl_.recipient_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Lease, _impl_.amount_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Lease, _impl_.nonce_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Lease, _impl_.lease_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_LeaseCancel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_LeaseCancel, _impl_.lease_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_ErrorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_ErrorMessage, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_ErrorMessage, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call_Argument_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call_Argument_List, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call_Argument, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call_Argument, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call_Argument, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call, _impl_.function_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call, _impl_.args_bytes_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Call, _impl_.args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Invocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Invocation, _impl_.dapp_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Invocation, _impl_.call_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Invocation, _impl_.payments_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult_Invocation, _impl_.statechanges_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.data_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.transfers_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.issues_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.reissues_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.burns_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.sponsor_fees_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.leases_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.lease_cancels_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.invokes_),
  PROTOBUF_FIELD_OFFSET(::vrp::InvokeScriptResult, _impl_.private_payment_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::vrp::InvokeScriptResult_Payment)},
  { 8, -1, -1, sizeof(::vrp::InvokeScriptResult_PrivatePayment)},
  { 16, -1, -1, sizeof(::vrp::InvokeScriptResult_Issue)},
  { 31, -1, -1, sizeof(::vrp::InvokeScriptResult_Reissue)},
  { 40, -1, -1, sizeof(::vrp::InvokeScriptResult_Burn)},
  { 48, -1, -1, sizeof(::vrp::InvokeScriptResult_SponsorFee)},
  { 55, -1, -1, sizeof(::vrp::InvokeScriptResult_Lease)},
  { 65, -1, -1, sizeof(::vrp::InvokeScriptResult_LeaseCancel)},
  { 72, -1, -1, sizeof(::vrp::InvokeScriptResult_ErrorMessage)},
  { 80, -1, -1, sizeof(::vrp::InvokeScriptResult_Call_Argument_List)},
  { 87, -1, -1, sizeof(::vrp::InvokeScriptResult_Call_Argument)},
  { 100, -1, -1, sizeof(::vrp::InvokeScriptResult_Call)},
  { 109, -1, -1, sizeof(::vrp::InvokeScriptResult_Invocation)},
  { 119, -1, -1, sizeof(::vrp::InvokeScriptResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::vrp::_InvokeScriptResult_Payment_default_instance_._instance,
  &::vrp::_InvokeScriptResult_PrivatePayment_default_instance_._instance,
  &::vrp::_InvokeScriptResult_Issue_default_instance_._instance,
  &::vrp::_InvokeScriptResult_Reissue_default_instance_._instance,
  &::vrp::_InvokeScriptResult_Burn_default_instance_._instance,
  &::vrp::_InvokeScriptResult_SponsorFee_default_instance_._instance,
  &::vrp::_InvokeScriptResult_Lease_default_instance_._instance,
  &::vrp::_InvokeScriptResult_LeaseCancel_default_instance_._instance,
  &::vrp::_InvokeScriptResult_ErrorMessage_default_instance_._instance,
  &::vrp::_InvokeScriptResult_Call_Argument_List_default_instance_._instance,
  &::vrp::_InvokeScriptResult_Call_Argument_default_instance_._instance,
  &::vrp::_InvokeScriptResult_Call_default_instance_._instance,
  &::vrp::_InvokeScriptResult_Invocation_default_instance_._instance,
  &::vrp::_InvokeScriptResult_default_instance_._instance,
};

const char descriptor_table_protodef_vrp_2finvoke_5fscript_5fresult_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036vrp/invoke_script_result.proto\022\003vrp\032\025v"
  "rp/transaction.proto\032\020vrp/amount.proto\032\023"
  "vrp/recipient.proto\"\306\r\n\022InvokeScriptResu"
  "lt\0220\n\004data\030\001 \003(\0132\".vrp.DataTransactionDa"
  "ta.DataEntry\0222\n\ttransfers\030\002 \003(\0132\037.vrp.In"
  "vokeScriptResult.Payment\022-\n\006issues\030\003 \003(\013"
  "2\035.vrp.InvokeScriptResult.Issue\0221\n\010reiss"
  "ues\030\004 \003(\0132\037.vrp.InvokeScriptResult.Reiss"
  "ue\022+\n\005burns\030\005 \003(\0132\034.vrp.InvokeScriptResu"
  "lt.Burn\022;\n\rerror_message\030\006 \001(\0132$.vrp.Inv"
  "okeScriptResult.ErrorMessage\0228\n\014sponsor_"
  "fees\030\007 \003(\0132\".vrp.InvokeScriptResult.Spon"
  "sorFee\022-\n\006leases\030\010 \003(\0132\035.vrp.InvokeScrip"
  "tResult.Lease\022:\n\rlease_cancels\030\t \003(\0132#.v"
  "rp.InvokeScriptResult.LeaseCancel\0223\n\007inv"
  "okes\030\n \003(\0132\".vrp.InvokeScriptResult.Invo"
  "cation\022\?\n\017private_payment\030\013 \003(\0132&.vrp.In"
  "vokeScriptResult.PrivatePayment\0327\n\007Payme"
  "nt\022\017\n\007address\030\001 \001(\014\022\033\n\006amount\030\002 \001(\0132\013.vr"
  "p.Amount\032>\n\016PrivatePayment\022\017\n\007address\030\001 "
  "\001(\014\022\033\n\006amount\030\002 \001(\0132\013.vrp.Amount\032\240\001\n\005Iss"
  "ue\022\020\n\010asset_id\030\001 \001(\014\022\014\n\004name\030\002 \001(\t\022\023\n\013de"
  "scription\030\003 \001(\t\022\r\n\005image\030\004 \001(\t\022\016\n\006amount"
  "\030\005 \001(\003\022\020\n\010decimals\030\006 \001(\005\022\022\n\nreissuable\030\007"
  " \001(\010\022\016\n\006script\030\010 \001(\014\022\r\n\005nonce\030\t \001(\003\032B\n\007R"
  "eissue\022\020\n\010asset_id\030\001 \001(\014\022\016\n\006amount\030\002 \001(\003"
  "\022\025\n\ris_reissuable\030\003 \001(\010\032(\n\004Burn\022\020\n\010asset"
  "_id\030\001 \001(\014\022\016\n\006amount\030\002 \001(\003\032*\n\nSponsorFee\022"
  "\034\n\007min_fee\030\001 \001(\0132\013.vrp.Amount\032[\n\005Lease\022!"
  "\n\trecipient\030\001 \001(\0132\016.vrp.Recipient\022\016\n\006amo"
  "unt\030\002 \001(\003\022\r\n\005nonce\030\003 \001(\003\022\020\n\010lease_id\030\004 \001"
  "(\014\032\037\n\013LeaseCancel\022\020\n\010lease_id\030\001 \001(\014\032*\n\014E"
  "rrorMessage\022\014\n\004code\030\001 \001(\005\022\014\n\004text\030\002 \001(\t\032"
  "\353\002\n\004Call\022\020\n\010function\030\001 \001(\t\022\026\n\nargs_bytes"
  "\030\002 \003(\014B\002\030\001\0223\n\004args\030\003 \003(\0132%.vrp.InvokeScr"
  "iptResult.Call.Argument\032\203\002\n\010Argument\022\027\n\r"
  "integer_value\030\001 \001(\003H\000\022\026\n\014binary_value\030\002 "
  "\001(\014H\000\022\026\n\014string_value\030\003 \001(\tH\000\022\027\n\rboolean"
  "_value\030\004 \001(\010H\000\022\022\n\010case_obj\030\005 \001(\014H\000\022:\n\004li"
  "st\030\n \001(\0132*.vrp.InvokeScriptResult.Call.A"
  "rgument.ListH\000\032<\n\004List\0224\n\005items\030\001 \003(\0132%."
  "vrp.InvokeScriptResult.Call.ArgumentB\007\n\005"
  "value\032\224\001\n\nInvocation\022\014\n\004dApp\030\001 \001(\014\022*\n\004ca"
  "ll\030\002 \001(\0132\034.vrp.InvokeScriptResult.Call\022\035"
  "\n\010payments\030\003 \003(\0132\013.vrp.Amount\022-\n\014stateCh"
  "anges\030\004 \001(\0132\027.vrp.InvokeScriptResultBX\n\034"
  "com.vrp.protobuf.transactionZ2github.com"
  "/eVESTXCOIN/govrp/pkg/grpc/generated/vrp"
  "\252\002\003VRPb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_deps[3] = {
  &::descriptor_table_vrp_2famount_2eproto,
  &::descriptor_table_vrp_2frecipient_2eproto,
  &::descriptor_table_vrp_2ftransaction_2eproto,
};
static ::_pbi::once_flag descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto = {
    false, false, 1934, descriptor_table_protodef_vrp_2finvoke_5fscript_5fresult_2eproto,
    "vrp/invoke_script_result.proto",
    &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once, descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_deps, 3, 14,
    schemas, file_default_instances, TableStruct_vrp_2finvoke_5fscript_5fresult_2eproto::offsets,
    file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto, file_level_enum_descriptors_vrp_2finvoke_5fscript_5fresult_2eproto,
    file_level_service_descriptors_vrp_2finvoke_5fscript_5fresult_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter() {
  return &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_vrp_2finvoke_5fscript_5fresult_2eproto(&descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto);
namespace vrp {

// ===================================================================

class InvokeScriptResult_Payment::_Internal {
 public:
  static const ::vrp::Amount& amount(const InvokeScriptResult_Payment* msg);
};

const ::vrp::Amount&
InvokeScriptResult_Payment::_Internal::amount(const InvokeScriptResult_Payment* msg) {
  return *msg->_impl_.amount_;
}
void InvokeScriptResult_Payment::clear_amount() {
  if (GetArenaForAllocation() == nullptr && _impl_.amount_ != nullptr) {
    delete _impl_.amount_;
  }
  _impl_.amount_ = nullptr;
}
InvokeScriptResult_Payment::InvokeScriptResult_Payment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Payment)
}
InvokeScriptResult_Payment::InvokeScriptResult_Payment(const InvokeScriptResult_Payment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Payment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.amount_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_amount()) {
    _this->_impl_.amount_ = new ::vrp::Amount(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Payment)
}

inline void InvokeScriptResult_Payment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.amount_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_Payment::~InvokeScriptResult_Payment() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Payment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Payment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void InvokeScriptResult_Payment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Payment::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Payment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.amount_ != nullptr) {
    delete _impl_.amount_;
  }
  _impl_.amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Payment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .vrp.Amount amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Payment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Payment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (!this->_internal_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_address(), target);
  }

  // .vrp.Amount amount = 2;
  if (this->_internal_has_amount()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Payment)
  return target;
}

size_t InvokeScriptResult_Payment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Payment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_address());
  }

  // .vrp.Amount amount = 2;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Payment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Payment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Payment::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Payment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Payment*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Payment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Payment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_has_amount()) {
    _this->_internal_mutable_amount()->::vrp::Amount::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Payment::CopyFrom(const InvokeScriptResult_Payment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Payment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Payment::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Payment::InternalSwap(InvokeScriptResult_Payment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Payment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[0]);
}

// ===================================================================

class InvokeScriptResult_PrivatePayment::_Internal {
 public:
  static const ::vrp::Amount& amount(const InvokeScriptResult_PrivatePayment* msg);
};

const ::vrp::Amount&
InvokeScriptResult_PrivatePayment::_Internal::amount(const InvokeScriptResult_PrivatePayment* msg) {
  return *msg->_impl_.amount_;
}
void InvokeScriptResult_PrivatePayment::clear_amount() {
  if (GetArenaForAllocation() == nullptr && _impl_.amount_ != nullptr) {
    delete _impl_.amount_;
  }
  _impl_.amount_ = nullptr;
}
InvokeScriptResult_PrivatePayment::InvokeScriptResult_PrivatePayment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.PrivatePayment)
}
InvokeScriptResult_PrivatePayment::InvokeScriptResult_PrivatePayment(const InvokeScriptResult_PrivatePayment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_PrivatePayment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.amount_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_amount()) {
    _this->_impl_.amount_ = new ::vrp::Amount(*from._impl_.amount_);
  }
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.PrivatePayment)
}

inline void InvokeScriptResult_PrivatePayment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.amount_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_PrivatePayment::~InvokeScriptResult_PrivatePayment() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.PrivatePayment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_PrivatePayment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void InvokeScriptResult_PrivatePayment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_PrivatePayment::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.PrivatePayment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.amount_ != nullptr) {
    delete _impl_.amount_;
  }
  _impl_.amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_PrivatePayment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .vrp.Amount amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_PrivatePayment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.PrivatePayment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (!this->_internal_address().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_address(), target);
  }

  // .vrp.Amount amount = 2;
  if (this->_internal_has_amount()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.PrivatePayment)
  return target;
}

size_t InvokeScriptResult_PrivatePayment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.PrivatePayment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_address());
  }

  // .vrp.Amount amount = 2;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_PrivatePayment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_PrivatePayment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_PrivatePayment::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_PrivatePayment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_PrivatePayment*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_PrivatePayment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.PrivatePayment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_has_amount()) {
    _this->_internal_mutable_amount()->::vrp::Amount::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_PrivatePayment::CopyFrom(const InvokeScriptResult_PrivatePayment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.PrivatePayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_PrivatePayment::IsInitialized() const {
  return true;
}

void InvokeScriptResult_PrivatePayment::InternalSwap(InvokeScriptResult_PrivatePayment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_PrivatePayment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[1]);
}

// ===================================================================

class InvokeScriptResult_Issue::_Internal {
 public:
};

InvokeScriptResult_Issue::InvokeScriptResult_Issue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Issue)
}
InvokeScriptResult_Issue::InvokeScriptResult_Issue(const InvokeScriptResult_Issue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Issue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.image_){}
    , decltype(_impl_.script_){}
    , decltype(_impl_.amount_){}
    , decltype(_impl_.decimals_){}
    , decltype(_impl_.reissuable_){}
    , decltype(_impl_.nonce_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.asset_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_asset_id().empty()) {
    _this->_impl_.asset_id_.Set(from._internal_asset_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_image().empty()) {
    _this->_impl_.image_.Set(from._internal_image(), 
      _this->GetArenaForAllocation());
  }
  _impl_.script_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_script().empty()) {
    _this->_impl_.script_.Set(from._internal_script(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.amount_, &from._impl_.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.nonce_) -
    reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.nonce_));
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Issue)
}

inline void InvokeScriptResult_Issue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.image_){}
    , decltype(_impl_.script_){}
    , decltype(_impl_.amount_){int64_t{0}}
    , decltype(_impl_.decimals_){0}
    , decltype(_impl_.reissuable_){false}
    , decltype(_impl_.nonce_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.asset_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.script_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_Issue::~InvokeScriptResult_Issue() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Issue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Issue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.asset_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.image_.Destroy();
  _impl_.script_.Destroy();
}

void InvokeScriptResult_Issue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Issue::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Issue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.asset_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.image_.ClearToEmpty();
  _impl_.script_.ClearToEmpty();
  ::memset(&_impl_.amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.nonce_) -
      reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.nonce_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Issue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes asset_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_asset_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "vrp.InvokeScriptResult.Issue.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "vrp.InvokeScriptResult.Issue.description"));
        } else
          goto handle_unusual;
        continue;
      // string image = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_image();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "vrp.InvokeScriptResult.Issue.image"));
        } else
          goto handle_unusual;
        continue;
      // int64 amount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 decimals = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.decimals_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool reissuable = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.reissuable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes script = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_script();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 nonce = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Issue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Issue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes asset_id = 1;
  if (!this->_internal_asset_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_asset_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vrp.InvokeScriptResult.Issue.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vrp.InvokeScriptResult.Issue.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string image = 4;
  if (!this->_internal_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vrp.InvokeScriptResult.Issue.image");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_image(), target);
  }

  // int64 amount = 5;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_amount(), target);
  }

  // int32 decimals = 6;
  if (this->_internal_decimals() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_decimals(), target);
  }

  // bool reissuable = 7;
  if (this->_internal_reissuable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_reissuable(), target);
  }

  // bytes script = 8;
  if (!this->_internal_script().empty()) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_script(), target);
  }

  // int64 nonce = 9;
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Issue)
  return target;
}

size_t InvokeScriptResult_Issue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Issue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes asset_id = 1;
  if (!this->_internal_asset_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_asset_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string image = 4;
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  // bytes script = 8;
  if (!this->_internal_script().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_script());
  }

  // int64 amount = 5;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_amount());
  }

  // int32 decimals = 6;
  if (this->_internal_decimals() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_decimals());
  }

  // bool reissuable = 7;
  if (this->_internal_reissuable() != 0) {
    total_size += 1 + 1;
  }

  // int64 nonce = 9;
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Issue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Issue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Issue::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Issue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Issue*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Issue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Issue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_asset_id().empty()) {
    _this->_internal_set_asset_id(from._internal_asset_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_image().empty()) {
    _this->_internal_set_image(from._internal_image());
  }
  if (!from._internal_script().empty()) {
    _this->_internal_set_script(from._internal_script());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  if (from._internal_decimals() != 0) {
    _this->_internal_set_decimals(from._internal_decimals());
  }
  if (from._internal_reissuable() != 0) {
    _this->_internal_set_reissuable(from._internal_reissuable());
  }
  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Issue::CopyFrom(const InvokeScriptResult_Issue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Issue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Issue::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Issue::InternalSwap(InvokeScriptResult_Issue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.asset_id_, lhs_arena,
      &other->_impl_.asset_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.image_, lhs_arena,
      &other->_impl_.image_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.script_, lhs_arena,
      &other->_impl_.script_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvokeScriptResult_Issue, _impl_.nonce_)
      + sizeof(InvokeScriptResult_Issue::_impl_.nonce_)
      - PROTOBUF_FIELD_OFFSET(InvokeScriptResult_Issue, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Issue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[2]);
}

// ===================================================================

class InvokeScriptResult_Reissue::_Internal {
 public:
};

InvokeScriptResult_Reissue::InvokeScriptResult_Reissue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Reissue)
}
InvokeScriptResult_Reissue::InvokeScriptResult_Reissue(const InvokeScriptResult_Reissue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Reissue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_id_){}
    , decltype(_impl_.amount_){}
    , decltype(_impl_.is_reissuable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.asset_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_asset_id().empty()) {
    _this->_impl_.asset_id_.Set(from._internal_asset_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.amount_, &from._impl_.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_reissuable_) -
    reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.is_reissuable_));
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Reissue)
}

inline void InvokeScriptResult_Reissue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_id_){}
    , decltype(_impl_.amount_){int64_t{0}}
    , decltype(_impl_.is_reissuable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.asset_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_Reissue::~InvokeScriptResult_Reissue() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Reissue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Reissue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.asset_id_.Destroy();
}

void InvokeScriptResult_Reissue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Reissue::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Reissue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.asset_id_.ClearToEmpty();
  ::memset(&_impl_.amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_reissuable_) -
      reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.is_reissuable_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Reissue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes asset_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_asset_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_reissuable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_reissuable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Reissue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Reissue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes asset_id = 1;
  if (!this->_internal_asset_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_asset_id(), target);
  }

  // int64 amount = 2;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_amount(), target);
  }

  // bool is_reissuable = 3;
  if (this->_internal_is_reissuable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_reissuable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Reissue)
  return target;
}

size_t InvokeScriptResult_Reissue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Reissue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes asset_id = 1;
  if (!this->_internal_asset_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_asset_id());
  }

  // int64 amount = 2;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_amount());
  }

  // bool is_reissuable = 3;
  if (this->_internal_is_reissuable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Reissue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Reissue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Reissue::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Reissue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Reissue*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Reissue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Reissue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_asset_id().empty()) {
    _this->_internal_set_asset_id(from._internal_asset_id());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  if (from._internal_is_reissuable() != 0) {
    _this->_internal_set_is_reissuable(from._internal_is_reissuable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Reissue::CopyFrom(const InvokeScriptResult_Reissue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Reissue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Reissue::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Reissue::InternalSwap(InvokeScriptResult_Reissue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.asset_id_, lhs_arena,
      &other->_impl_.asset_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvokeScriptResult_Reissue, _impl_.is_reissuable_)
      + sizeof(InvokeScriptResult_Reissue::_impl_.is_reissuable_)
      - PROTOBUF_FIELD_OFFSET(InvokeScriptResult_Reissue, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Reissue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[3]);
}

// ===================================================================

class InvokeScriptResult_Burn::_Internal {
 public:
};

InvokeScriptResult_Burn::InvokeScriptResult_Burn(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Burn)
}
InvokeScriptResult_Burn::InvokeScriptResult_Burn(const InvokeScriptResult_Burn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Burn* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_id_){}
    , decltype(_impl_.amount_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.asset_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_asset_id().empty()) {
    _this->_impl_.asset_id_.Set(from._internal_asset_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.amount_ = from._impl_.amount_;
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Burn)
}

inline void InvokeScriptResult_Burn::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_id_){}
    , decltype(_impl_.amount_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.asset_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_Burn::~InvokeScriptResult_Burn() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Burn)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Burn::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.asset_id_.Destroy();
}

void InvokeScriptResult_Burn::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Burn::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Burn)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.asset_id_.ClearToEmpty();
  _impl_.amount_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Burn::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes asset_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_asset_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Burn::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Burn)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes asset_id = 1;
  if (!this->_internal_asset_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_asset_id(), target);
  }

  // int64 amount = 2;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Burn)
  return target;
}

size_t InvokeScriptResult_Burn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Burn)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes asset_id = 1;
  if (!this->_internal_asset_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_asset_id());
  }

  // int64 amount = 2;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Burn::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Burn::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Burn::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Burn::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Burn*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Burn&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Burn)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_asset_id().empty()) {
    _this->_internal_set_asset_id(from._internal_asset_id());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Burn::CopyFrom(const InvokeScriptResult_Burn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Burn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Burn::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Burn::InternalSwap(InvokeScriptResult_Burn* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.asset_id_, lhs_arena,
      &other->_impl_.asset_id_, rhs_arena
  );
  swap(_impl_.amount_, other->_impl_.amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Burn::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[4]);
}

// ===================================================================

class InvokeScriptResult_SponsorFee::_Internal {
 public:
  static const ::vrp::Amount& min_fee(const InvokeScriptResult_SponsorFee* msg);
};

const ::vrp::Amount&
InvokeScriptResult_SponsorFee::_Internal::min_fee(const InvokeScriptResult_SponsorFee* msg) {
  return *msg->_impl_.min_fee_;
}
void InvokeScriptResult_SponsorFee::clear_min_fee() {
  if (GetArenaForAllocation() == nullptr && _impl_.min_fee_ != nullptr) {
    delete _impl_.min_fee_;
  }
  _impl_.min_fee_ = nullptr;
}
InvokeScriptResult_SponsorFee::InvokeScriptResult_SponsorFee(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.SponsorFee)
}
InvokeScriptResult_SponsorFee::InvokeScriptResult_SponsorFee(const InvokeScriptResult_SponsorFee& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_SponsorFee* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.min_fee_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_min_fee()) {
    _this->_impl_.min_fee_ = new ::vrp::Amount(*from._impl_.min_fee_);
  }
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.SponsorFee)
}

inline void InvokeScriptResult_SponsorFee::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.min_fee_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InvokeScriptResult_SponsorFee::~InvokeScriptResult_SponsorFee() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.SponsorFee)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_SponsorFee::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.min_fee_;
}

void InvokeScriptResult_SponsorFee::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_SponsorFee::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.SponsorFee)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.min_fee_ != nullptr) {
    delete _impl_.min_fee_;
  }
  _impl_.min_fee_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_SponsorFee::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .vrp.Amount min_fee = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_min_fee(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_SponsorFee::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.SponsorFee)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .vrp.Amount min_fee = 1;
  if (this->_internal_has_min_fee()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::min_fee(this),
        _Internal::min_fee(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.SponsorFee)
  return target;
}

size_t InvokeScriptResult_SponsorFee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.SponsorFee)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vrp.Amount min_fee = 1;
  if (this->_internal_has_min_fee()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.min_fee_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_SponsorFee::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_SponsorFee::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_SponsorFee::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_SponsorFee::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_SponsorFee*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_SponsorFee&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.SponsorFee)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_min_fee()) {
    _this->_internal_mutable_min_fee()->::vrp::Amount::MergeFrom(
        from._internal_min_fee());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_SponsorFee::CopyFrom(const InvokeScriptResult_SponsorFee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.SponsorFee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_SponsorFee::IsInitialized() const {
  return true;
}

void InvokeScriptResult_SponsorFee::InternalSwap(InvokeScriptResult_SponsorFee* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.min_fee_, other->_impl_.min_fee_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_SponsorFee::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[5]);
}

// ===================================================================

class InvokeScriptResult_Lease::_Internal {
 public:
  static const ::vrp::Recipient& recipient(const InvokeScriptResult_Lease* msg);
};

const ::vrp::Recipient&
InvokeScriptResult_Lease::_Internal::recipient(const InvokeScriptResult_Lease* msg) {
  return *msg->_impl_.recipient_;
}
void InvokeScriptResult_Lease::clear_recipient() {
  if (GetArenaForAllocation() == nullptr && _impl_.recipient_ != nullptr) {
    delete _impl_.recipient_;
  }
  _impl_.recipient_ = nullptr;
}
InvokeScriptResult_Lease::InvokeScriptResult_Lease(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Lease)
}
InvokeScriptResult_Lease::InvokeScriptResult_Lease(const InvokeScriptResult_Lease& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Lease* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lease_id_){}
    , decltype(_impl_.recipient_){nullptr}
    , decltype(_impl_.amount_){}
    , decltype(_impl_.nonce_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.lease_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lease_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lease_id().empty()) {
    _this->_impl_.lease_id_.Set(from._internal_lease_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_recipient()) {
    _this->_impl_.recipient_ = new ::vrp::Recipient(*from._impl_.recipient_);
  }
  ::memcpy(&_impl_.amount_, &from._impl_.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.nonce_) -
    reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.nonce_));
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Lease)
}

inline void InvokeScriptResult_Lease::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.lease_id_){}
    , decltype(_impl_.recipient_){nullptr}
    , decltype(_impl_.amount_){int64_t{0}}
    , decltype(_impl_.nonce_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.lease_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lease_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_Lease::~InvokeScriptResult_Lease() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Lease)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Lease::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lease_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.recipient_;
}

void InvokeScriptResult_Lease::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Lease::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Lease)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lease_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.recipient_ != nullptr) {
    delete _impl_.recipient_;
  }
  _impl_.recipient_ = nullptr;
  ::memset(&_impl_.amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.nonce_) -
      reinterpret_cast<char*>(&_impl_.amount_)) + sizeof(_impl_.nonce_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Lease::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .vrp.Recipient recipient = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_recipient(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 nonce = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes lease_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_lease_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Lease::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Lease)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .vrp.Recipient recipient = 1;
  if (this->_internal_has_recipient()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::recipient(this),
        _Internal::recipient(this).GetCachedSize(), target, stream);
  }

  // int64 amount = 2;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_amount(), target);
  }

  // int64 nonce = 3;
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_nonce(), target);
  }

  // bytes lease_id = 4;
  if (!this->_internal_lease_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_lease_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Lease)
  return target;
}

size_t InvokeScriptResult_Lease::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Lease)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes lease_id = 4;
  if (!this->_internal_lease_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_lease_id());
  }

  // .vrp.Recipient recipient = 1;
  if (this->_internal_has_recipient()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.recipient_);
  }

  // int64 amount = 2;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_amount());
  }

  // int64 nonce = 3;
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_nonce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Lease::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Lease::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Lease::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Lease::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Lease*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Lease&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Lease)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lease_id().empty()) {
    _this->_internal_set_lease_id(from._internal_lease_id());
  }
  if (from._internal_has_recipient()) {
    _this->_internal_mutable_recipient()->::vrp::Recipient::MergeFrom(
        from._internal_recipient());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  if (from._internal_nonce() != 0) {
    _this->_internal_set_nonce(from._internal_nonce());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Lease::CopyFrom(const InvokeScriptResult_Lease& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Lease)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Lease::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Lease::InternalSwap(InvokeScriptResult_Lease* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.lease_id_, lhs_arena,
      &other->_impl_.lease_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvokeScriptResult_Lease, _impl_.nonce_)
      + sizeof(InvokeScriptResult_Lease::_impl_.nonce_)
      - PROTOBUF_FIELD_OFFSET(InvokeScriptResult_Lease, _impl_.recipient_)>(
          reinterpret_cast<char*>(&_impl_.recipient_),
          reinterpret_cast<char*>(&other->_impl_.recipient_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Lease::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[6]);
}

// ===================================================================

class InvokeScriptResult_LeaseCancel::_Internal {
 public:
};

InvokeScriptResult_LeaseCancel::InvokeScriptResult_LeaseCancel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.LeaseCancel)
}
InvokeScriptResult_LeaseCancel::InvokeScriptResult_LeaseCancel(const InvokeScriptResult_LeaseCancel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_LeaseCancel* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lease_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.lease_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lease_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lease_id().empty()) {
    _this->_impl_.lease_id_.Set(from._internal_lease_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.LeaseCancel)
}

inline void InvokeScriptResult_LeaseCancel::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.lease_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.lease_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lease_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_LeaseCancel::~InvokeScriptResult_LeaseCancel() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.LeaseCancel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_LeaseCancel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lease_id_.Destroy();
}

void InvokeScriptResult_LeaseCancel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_LeaseCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.LeaseCancel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lease_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_LeaseCancel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes lease_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_lease_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_LeaseCancel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.LeaseCancel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes lease_id = 1;
  if (!this->_internal_lease_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_lease_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.LeaseCancel)
  return target;
}

size_t InvokeScriptResult_LeaseCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.LeaseCancel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes lease_id = 1;
  if (!this->_internal_lease_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_lease_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_LeaseCancel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_LeaseCancel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_LeaseCancel::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_LeaseCancel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_LeaseCancel*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_LeaseCancel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.LeaseCancel)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lease_id().empty()) {
    _this->_internal_set_lease_id(from._internal_lease_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_LeaseCancel::CopyFrom(const InvokeScriptResult_LeaseCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.LeaseCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_LeaseCancel::IsInitialized() const {
  return true;
}

void InvokeScriptResult_LeaseCancel::InternalSwap(InvokeScriptResult_LeaseCancel* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.lease_id_, lhs_arena,
      &other->_impl_.lease_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_LeaseCancel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[7]);
}

// ===================================================================

class InvokeScriptResult_ErrorMessage::_Internal {
 public:
};

InvokeScriptResult_ErrorMessage::InvokeScriptResult_ErrorMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.ErrorMessage)
}
InvokeScriptResult_ErrorMessage::InvokeScriptResult_ErrorMessage(const InvokeScriptResult_ErrorMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_ErrorMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.ErrorMessage)
}

inline void InvokeScriptResult_ErrorMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_ErrorMessage::~InvokeScriptResult_ErrorMessage() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.ErrorMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_ErrorMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void InvokeScriptResult_ErrorMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_ErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.ErrorMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_ErrorMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "vrp.InvokeScriptResult.ErrorMessage.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_ErrorMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.ErrorMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string text = 2;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vrp.InvokeScriptResult.ErrorMessage.text");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.ErrorMessage)
  return target;
}

size_t InvokeScriptResult_ErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.ErrorMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 2;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_ErrorMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_ErrorMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_ErrorMessage::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_ErrorMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_ErrorMessage*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_ErrorMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.ErrorMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_ErrorMessage::CopyFrom(const InvokeScriptResult_ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_ErrorMessage::IsInitialized() const {
  return true;
}

void InvokeScriptResult_ErrorMessage::InternalSwap(InvokeScriptResult_ErrorMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  swap(_impl_.code_, other->_impl_.code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_ErrorMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[8]);
}

// ===================================================================

class InvokeScriptResult_Call_Argument_List::_Internal {
 public:
};

InvokeScriptResult_Call_Argument_List::InvokeScriptResult_Call_Argument_List(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Call.Argument.List)
}
InvokeScriptResult_Call_Argument_List::InvokeScriptResult_Call_Argument_List(const InvokeScriptResult_Call_Argument_List& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Call_Argument_List* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Call.Argument.List)
}

inline void InvokeScriptResult_Call_Argument_List::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InvokeScriptResult_Call_Argument_List::~InvokeScriptResult_Call_Argument_List() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Call.Argument.List)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Call_Argument_List::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void InvokeScriptResult_Call_Argument_List::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Call_Argument_List::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Call.Argument.List)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Call_Argument_List::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .vrp.InvokeScriptResult.Call.Argument items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Call_Argument_List::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Call.Argument.List)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vrp.InvokeScriptResult.Call.Argument items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Call.Argument.List)
  return target;
}

size_t InvokeScriptResult_Call_Argument_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Call.Argument.List)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vrp.InvokeScriptResult.Call.Argument items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Call_Argument_List::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Call_Argument_List::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Call_Argument_List::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Call_Argument_List::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Call_Argument_List*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Call_Argument_List&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Call.Argument.List)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Call_Argument_List::CopyFrom(const InvokeScriptResult_Call_Argument_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Call.Argument.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Call_Argument_List::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Call_Argument_List::InternalSwap(InvokeScriptResult_Call_Argument_List* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Call_Argument_List::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[9]);
}

// ===================================================================

class InvokeScriptResult_Call_Argument::_Internal {
 public:
  static const ::vrp::InvokeScriptResult_Call_Argument_List& list(const InvokeScriptResult_Call_Argument* msg);
};

const ::vrp::InvokeScriptResult_Call_Argument_List&
InvokeScriptResult_Call_Argument::_Internal::list(const InvokeScriptResult_Call_Argument* msg) {
  return *msg->_impl_.value_.list_;
}
void InvokeScriptResult_Call_Argument::set_allocated_list(::vrp::InvokeScriptResult_Call_Argument_List* list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(list);
    if (message_arena != submessage_arena) {
      list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    set_has_list();
    _impl_.value_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:vrp.InvokeScriptResult.Call.Argument.list)
}
InvokeScriptResult_Call_Argument::InvokeScriptResult_Call_Argument(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Call.Argument)
}
InvokeScriptResult_Call_Argument::InvokeScriptResult_Call_Argument(const InvokeScriptResult_Call_Argument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Call_Argument* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kIntegerValue: {
      _this->_internal_set_integer_value(from._internal_integer_value());
      break;
    }
    case kBinaryValue: {
      _this->_internal_set_binary_value(from._internal_binary_value());
      break;
    }
    case kStringValue: {
      _this->_internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBooleanValue: {
      _this->_internal_set_boolean_value(from._internal_boolean_value());
      break;
    }
    case kCaseObj: {
      _this->_internal_set_case_obj(from._internal_case_obj());
      break;
    }
    case kList: {
      _this->_internal_mutable_list()->::vrp::InvokeScriptResult_Call_Argument_List::MergeFrom(
          from._internal_list());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Call.Argument)
}

inline void InvokeScriptResult_Call_Argument::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_value();
}

InvokeScriptResult_Call_Argument::~InvokeScriptResult_Call_Argument() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Call.Argument)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Call_Argument::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void InvokeScriptResult_Call_Argument::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Call_Argument::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:vrp.InvokeScriptResult.Call.Argument)
  switch (value_case()) {
    case kIntegerValue: {
      // No need to clear
      break;
    }
    case kBinaryValue: {
      _impl_.value_.binary_value_.Destroy();
      break;
    }
    case kStringValue: {
      _impl_.value_.string_value_.Destroy();
      break;
    }
    case kBooleanValue: {
      // No need to clear
      break;
    }
    case kCaseObj: {
      _impl_.value_.case_obj_.Destroy();
      break;
    }
    case kList: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.list_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void InvokeScriptResult_Call_Argument::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Call.Argument)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Call_Argument::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 integer_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_integer_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes binary_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_binary_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string string_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_string_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "vrp.InvokeScriptResult.Call.Argument.string_value"));
        } else
          goto handle_unusual;
        continue;
      // bool boolean_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _internal_set_boolean_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes case_obj = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_case_obj();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .vrp.InvokeScriptResult.Call.Argument.List list = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Call_Argument::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Call.Argument)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 integer_value = 1;
  if (_internal_has_integer_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_integer_value(), target);
  }

  // bytes binary_value = 2;
  if (_internal_has_binary_value()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_binary_value(), target);
  }

  // string string_value = 3;
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vrp.InvokeScriptResult.Call.Argument.string_value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_value(), target);
  }

  // bool boolean_value = 4;
  if (_internal_has_boolean_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_boolean_value(), target);
  }

  // bytes case_obj = 5;
  if (_internal_has_case_obj()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_case_obj(), target);
  }

  // .vrp.InvokeScriptResult.Call.Argument.List list = 10;
  if (_internal_has_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::list(this),
        _Internal::list(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Call.Argument)
  return target;
}

size_t InvokeScriptResult_Call_Argument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Call.Argument)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // int64 integer_value = 1;
    case kIntegerValue: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_integer_value());
      break;
    }
    // bytes binary_value = 2;
    case kBinaryValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_binary_value());
      break;
    }
    // string string_value = 3;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // bool boolean_value = 4;
    case kBooleanValue: {
      total_size += 1 + 1;
      break;
    }
    // bytes case_obj = 5;
    case kCaseObj: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_case_obj());
      break;
    }
    // .vrp.InvokeScriptResult.Call.Argument.List list = 10;
    case kList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.list_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Call_Argument::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Call_Argument::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Call_Argument::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Call_Argument::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Call_Argument*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Call_Argument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Call.Argument)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kIntegerValue: {
      _this->_internal_set_integer_value(from._internal_integer_value());
      break;
    }
    case kBinaryValue: {
      _this->_internal_set_binary_value(from._internal_binary_value());
      break;
    }
    case kStringValue: {
      _this->_internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBooleanValue: {
      _this->_internal_set_boolean_value(from._internal_boolean_value());
      break;
    }
    case kCaseObj: {
      _this->_internal_set_case_obj(from._internal_case_obj());
      break;
    }
    case kList: {
      _this->_internal_mutable_list()->::vrp::InvokeScriptResult_Call_Argument_List::MergeFrom(
          from._internal_list());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Call_Argument::CopyFrom(const InvokeScriptResult_Call_Argument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Call.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Call_Argument::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Call_Argument::InternalSwap(InvokeScriptResult_Call_Argument* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Call_Argument::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[10]);
}

// ===================================================================

class InvokeScriptResult_Call::_Internal {
 public:
};

InvokeScriptResult_Call::InvokeScriptResult_Call(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Call)
}
InvokeScriptResult_Call::InvokeScriptResult_Call(const InvokeScriptResult_Call& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Call* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.args_bytes_){from._impl_.args_bytes_}
    , decltype(_impl_.args_){from._impl_.args_}
    , decltype(_impl_.function_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_function().empty()) {
    _this->_impl_.function_.Set(from._internal_function(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Call)
}

inline void InvokeScriptResult_Call::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.args_bytes_){arena}
    , decltype(_impl_.args_){arena}
    , decltype(_impl_.function_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_Call::~InvokeScriptResult_Call() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Call)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Call::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.args_bytes_.~RepeatedPtrField();
  _impl_.args_.~RepeatedPtrField();
  _impl_.function_.Destroy();
}

void InvokeScriptResult_Call::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Call::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Call)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.args_bytes_.Clear();
  _impl_.args_.Clear();
  _impl_.function_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Call::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string function = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_function();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "vrp.InvokeScriptResult.Call.function"));
        } else
          goto handle_unusual;
        continue;
      // repeated bytes args_bytes = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_args_bytes();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.Call.Argument args = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Call::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Call)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (!this->_internal_function().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function().data(), static_cast<int>(this->_internal_function().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vrp.InvokeScriptResult.Call.function");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_function(), target);
  }

  // repeated bytes args_bytes = 2 [deprecated = true];
  for (int i = 0, n = this->_internal_args_bytes_size(); i < n; i++) {
    const auto& s = this->_internal_args_bytes(i);
    target = stream->WriteBytes(2, s, target);
  }

  // repeated .vrp.InvokeScriptResult.Call.Argument args = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_args_size()); i < n; i++) {
    const auto& repfield = this->_internal_args(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Call)
  return target;
}

size_t InvokeScriptResult_Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Call)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes args_bytes = 2 [deprecated = true];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.args_bytes_.size());
  for (int i = 0, n = _impl_.args_bytes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.args_bytes_.Get(i));
  }

  // repeated .vrp.InvokeScriptResult.Call.Argument args = 3;
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->_impl_.args_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string function = 1;
  if (!this->_internal_function().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Call::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Call::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Call::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Call::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Call*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Call&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Call)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.args_bytes_.MergeFrom(from._impl_.args_bytes_);
  _this->_impl_.args_.MergeFrom(from._impl_.args_);
  if (!from._internal_function().empty()) {
    _this->_internal_set_function(from._internal_function());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Call::CopyFrom(const InvokeScriptResult_Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Call::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Call::InternalSwap(InvokeScriptResult_Call* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.args_bytes_.InternalSwap(&other->_impl_.args_bytes_);
  _impl_.args_.InternalSwap(&other->_impl_.args_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.function_, lhs_arena,
      &other->_impl_.function_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Call::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[11]);
}

// ===================================================================

class InvokeScriptResult_Invocation::_Internal {
 public:
  static const ::vrp::InvokeScriptResult_Call& call(const InvokeScriptResult_Invocation* msg);
  static const ::vrp::InvokeScriptResult& statechanges(const InvokeScriptResult_Invocation* msg);
};

const ::vrp::InvokeScriptResult_Call&
InvokeScriptResult_Invocation::_Internal::call(const InvokeScriptResult_Invocation* msg) {
  return *msg->_impl_.call_;
}
const ::vrp::InvokeScriptResult&
InvokeScriptResult_Invocation::_Internal::statechanges(const InvokeScriptResult_Invocation* msg) {
  return *msg->_impl_.statechanges_;
}
void InvokeScriptResult_Invocation::clear_payments() {
  _impl_.payments_.Clear();
}
InvokeScriptResult_Invocation::InvokeScriptResult_Invocation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult.Invocation)
}
InvokeScriptResult_Invocation::InvokeScriptResult_Invocation(const InvokeScriptResult_Invocation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult_Invocation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payments_){from._impl_.payments_}
    , decltype(_impl_.dapp_){}
    , decltype(_impl_.call_){nullptr}
    , decltype(_impl_.statechanges_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dapp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dapp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dapp().empty()) {
    _this->_impl_.dapp_.Set(from._internal_dapp(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_call()) {
    _this->_impl_.call_ = new ::vrp::InvokeScriptResult_Call(*from._impl_.call_);
  }
  if (from._internal_has_statechanges()) {
    _this->_impl_.statechanges_ = new ::vrp::InvokeScriptResult(*from._impl_.statechanges_);
  }
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult.Invocation)
}

inline void InvokeScriptResult_Invocation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.payments_){arena}
    , decltype(_impl_.dapp_){}
    , decltype(_impl_.call_){nullptr}
    , decltype(_impl_.statechanges_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.dapp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dapp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvokeScriptResult_Invocation::~InvokeScriptResult_Invocation() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult.Invocation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult_Invocation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.payments_.~RepeatedPtrField();
  _impl_.dapp_.Destroy();
  if (this != internal_default_instance()) delete _impl_.call_;
  if (this != internal_default_instance()) delete _impl_.statechanges_;
}

void InvokeScriptResult_Invocation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult_Invocation::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult.Invocation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payments_.Clear();
  _impl_.dapp_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.call_ != nullptr) {
    delete _impl_.call_;
  }
  _impl_.call_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.statechanges_ != nullptr) {
    delete _impl_.statechanges_;
  }
  _impl_.statechanges_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult_Invocation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes dApp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_dapp();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .vrp.InvokeScriptResult.Call call = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_call(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.Amount payments = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_payments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .vrp.InvokeScriptResult stateChanges = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_statechanges(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult_Invocation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult.Invocation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes dApp = 1;
  if (!this->_internal_dapp().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_dapp(), target);
  }

  // .vrp.InvokeScriptResult.Call call = 2;
  if (this->_internal_has_call()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::call(this),
        _Internal::call(this).GetCachedSize(), target, stream);
  }

  // repeated .vrp.Amount payments = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_payments_size()); i < n; i++) {
    const auto& repfield = this->_internal_payments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .vrp.InvokeScriptResult stateChanges = 4;
  if (this->_internal_has_statechanges()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::statechanges(this),
        _Internal::statechanges(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult.Invocation)
  return target;
}

size_t InvokeScriptResult_Invocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult.Invocation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vrp.Amount payments = 3;
  total_size += 1UL * this->_internal_payments_size();
  for (const auto& msg : this->_impl_.payments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes dApp = 1;
  if (!this->_internal_dapp().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_dapp());
  }

  // .vrp.InvokeScriptResult.Call call = 2;
  if (this->_internal_has_call()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.call_);
  }

  // .vrp.InvokeScriptResult stateChanges = 4;
  if (this->_internal_has_statechanges()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.statechanges_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult_Invocation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult_Invocation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult_Invocation::GetClassData() const { return &_class_data_; }


void InvokeScriptResult_Invocation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult_Invocation*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult_Invocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult.Invocation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.payments_.MergeFrom(from._impl_.payments_);
  if (!from._internal_dapp().empty()) {
    _this->_internal_set_dapp(from._internal_dapp());
  }
  if (from._internal_has_call()) {
    _this->_internal_mutable_call()->::vrp::InvokeScriptResult_Call::MergeFrom(
        from._internal_call());
  }
  if (from._internal_has_statechanges()) {
    _this->_internal_mutable_statechanges()->::vrp::InvokeScriptResult::MergeFrom(
        from._internal_statechanges());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult_Invocation::CopyFrom(const InvokeScriptResult_Invocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult.Invocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult_Invocation::IsInitialized() const {
  return true;
}

void InvokeScriptResult_Invocation::InternalSwap(InvokeScriptResult_Invocation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.payments_.InternalSwap(&other->_impl_.payments_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dapp_, lhs_arena,
      &other->_impl_.dapp_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvokeScriptResult_Invocation, _impl_.statechanges_)
      + sizeof(InvokeScriptResult_Invocation::_impl_.statechanges_)
      - PROTOBUF_FIELD_OFFSET(InvokeScriptResult_Invocation, _impl_.call_)>(
          reinterpret_cast<char*>(&_impl_.call_),
          reinterpret_cast<char*>(&other->_impl_.call_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult_Invocation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[12]);
}

// ===================================================================

class InvokeScriptResult::_Internal {
 public:
  static const ::vrp::InvokeScriptResult_ErrorMessage& error_message(const InvokeScriptResult* msg);
};

const ::vrp::InvokeScriptResult_ErrorMessage&
InvokeScriptResult::_Internal::error_message(const InvokeScriptResult* msg) {
  return *msg->_impl_.error_message_;
}
void InvokeScriptResult::clear_data() {
  _impl_.data_.Clear();
}
InvokeScriptResult::InvokeScriptResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:vrp.InvokeScriptResult)
}
InvokeScriptResult::InvokeScriptResult(const InvokeScriptResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InvokeScriptResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_}
    , decltype(_impl_.transfers_){from._impl_.transfers_}
    , decltype(_impl_.issues_){from._impl_.issues_}
    , decltype(_impl_.reissues_){from._impl_.reissues_}
    , decltype(_impl_.burns_){from._impl_.burns_}
    , decltype(_impl_.sponsor_fees_){from._impl_.sponsor_fees_}
    , decltype(_impl_.leases_){from._impl_.leases_}
    , decltype(_impl_.lease_cancels_){from._impl_.lease_cancels_}
    , decltype(_impl_.invokes_){from._impl_.invokes_}
    , decltype(_impl_.private_payment_){from._impl_.private_payment_}
    , decltype(_impl_.error_message_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error_message()) {
    _this->_impl_.error_message_ = new ::vrp::InvokeScriptResult_ErrorMessage(*from._impl_.error_message_);
  }
  // @@protoc_insertion_point(copy_constructor:vrp.InvokeScriptResult)
}

inline void InvokeScriptResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena}
    , decltype(_impl_.transfers_){arena}
    , decltype(_impl_.issues_){arena}
    , decltype(_impl_.reissues_){arena}
    , decltype(_impl_.burns_){arena}
    , decltype(_impl_.sponsor_fees_){arena}
    , decltype(_impl_.leases_){arena}
    , decltype(_impl_.lease_cancels_){arena}
    , decltype(_impl_.invokes_){arena}
    , decltype(_impl_.private_payment_){arena}
    , decltype(_impl_.error_message_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InvokeScriptResult::~InvokeScriptResult() {
  // @@protoc_insertion_point(destructor:vrp.InvokeScriptResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InvokeScriptResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
  _impl_.transfers_.~RepeatedPtrField();
  _impl_.issues_.~RepeatedPtrField();
  _impl_.reissues_.~RepeatedPtrField();
  _impl_.burns_.~RepeatedPtrField();
  _impl_.sponsor_fees_.~RepeatedPtrField();
  _impl_.leases_.~RepeatedPtrField();
  _impl_.lease_cancels_.~RepeatedPtrField();
  _impl_.invokes_.~RepeatedPtrField();
  _impl_.private_payment_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.error_message_;
}

void InvokeScriptResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InvokeScriptResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vrp.InvokeScriptResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.transfers_.Clear();
  _impl_.issues_.Clear();
  _impl_.reissues_.Clear();
  _impl_.burns_.Clear();
  _impl_.sponsor_fees_.Clear();
  _impl_.leases_.Clear();
  _impl_.lease_cancels_.Clear();
  _impl_.invokes_.Clear();
  _impl_.private_payment_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.error_message_ != nullptr) {
    delete _impl_.error_message_;
  }
  _impl_.error_message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeScriptResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .vrp.DataTransactionData.DataEntry data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.Payment transfers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_transfers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.Issue issues = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_issues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.Reissue reissues = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reissues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.Burn burns = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_burns(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .vrp.InvokeScriptResult.ErrorMessage error_message = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.SponsorFee sponsor_fees = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sponsor_fees(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.Lease leases = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_leases(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.LeaseCancel lease_cancels = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_lease_cancels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.Invocation invokes = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invokes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .vrp.InvokeScriptResult.PrivatePayment private_payment = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_private_payment(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeScriptResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vrp.InvokeScriptResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vrp.DataTransactionData.DataEntry data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.Payment transfers = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transfers_size()); i < n; i++) {
    const auto& repfield = this->_internal_transfers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.Issue issues = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_issues_size()); i < n; i++) {
    const auto& repfield = this->_internal_issues(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.Reissue reissues = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_reissues_size()); i < n; i++) {
    const auto& repfield = this->_internal_reissues(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.Burn burns = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_burns_size()); i < n; i++) {
    const auto& repfield = this->_internal_burns(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .vrp.InvokeScriptResult.ErrorMessage error_message = 6;
  if (this->_internal_has_error_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::error_message(this),
        _Internal::error_message(this).GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.SponsorFee sponsor_fees = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sponsor_fees_size()); i < n; i++) {
    const auto& repfield = this->_internal_sponsor_fees(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.Lease leases = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_leases_size()); i < n; i++) {
    const auto& repfield = this->_internal_leases(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.LeaseCancel lease_cancels = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_lease_cancels_size()); i < n; i++) {
    const auto& repfield = this->_internal_lease_cancels(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.Invocation invokes = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_invokes_size()); i < n; i++) {
    const auto& repfield = this->_internal_invokes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .vrp.InvokeScriptResult.PrivatePayment private_payment = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_private_payment_size()); i < n; i++) {
    const auto& repfield = this->_internal_private_payment(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrp.InvokeScriptResult)
  return target;
}

size_t InvokeScriptResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrp.InvokeScriptResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vrp.DataTransactionData.DataEntry data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_impl_.data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.Payment transfers = 2;
  total_size += 1UL * this->_internal_transfers_size();
  for (const auto& msg : this->_impl_.transfers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.Issue issues = 3;
  total_size += 1UL * this->_internal_issues_size();
  for (const auto& msg : this->_impl_.issues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.Reissue reissues = 4;
  total_size += 1UL * this->_internal_reissues_size();
  for (const auto& msg : this->_impl_.reissues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.Burn burns = 5;
  total_size += 1UL * this->_internal_burns_size();
  for (const auto& msg : this->_impl_.burns_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.SponsorFee sponsor_fees = 7;
  total_size += 1UL * this->_internal_sponsor_fees_size();
  for (const auto& msg : this->_impl_.sponsor_fees_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.Lease leases = 8;
  total_size += 1UL * this->_internal_leases_size();
  for (const auto& msg : this->_impl_.leases_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.LeaseCancel lease_cancels = 9;
  total_size += 1UL * this->_internal_lease_cancels_size();
  for (const auto& msg : this->_impl_.lease_cancels_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.Invocation invokes = 10;
  total_size += 1UL * this->_internal_invokes_size();
  for (const auto& msg : this->_impl_.invokes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .vrp.InvokeScriptResult.PrivatePayment private_payment = 11;
  total_size += 1UL * this->_internal_private_payment_size();
  for (const auto& msg : this->_impl_.private_payment_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .vrp.InvokeScriptResult.ErrorMessage error_message = 6;
  if (this->_internal_has_error_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.error_message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeScriptResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InvokeScriptResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeScriptResult::GetClassData() const { return &_class_data_; }


void InvokeScriptResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InvokeScriptResult*>(&to_msg);
  auto& from = static_cast<const InvokeScriptResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vrp.InvokeScriptResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  _this->_impl_.transfers_.MergeFrom(from._impl_.transfers_);
  _this->_impl_.issues_.MergeFrom(from._impl_.issues_);
  _this->_impl_.reissues_.MergeFrom(from._impl_.reissues_);
  _this->_impl_.burns_.MergeFrom(from._impl_.burns_);
  _this->_impl_.sponsor_fees_.MergeFrom(from._impl_.sponsor_fees_);
  _this->_impl_.leases_.MergeFrom(from._impl_.leases_);
  _this->_impl_.lease_cancels_.MergeFrom(from._impl_.lease_cancels_);
  _this->_impl_.invokes_.MergeFrom(from._impl_.invokes_);
  _this->_impl_.private_payment_.MergeFrom(from._impl_.private_payment_);
  if (from._internal_has_error_message()) {
    _this->_internal_mutable_error_message()->::vrp::InvokeScriptResult_ErrorMessage::MergeFrom(
        from._internal_error_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeScriptResult::CopyFrom(const InvokeScriptResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrp.InvokeScriptResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeScriptResult::IsInitialized() const {
  return true;
}

void InvokeScriptResult::InternalSwap(InvokeScriptResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  _impl_.transfers_.InternalSwap(&other->_impl_.transfers_);
  _impl_.issues_.InternalSwap(&other->_impl_.issues_);
  _impl_.reissues_.InternalSwap(&other->_impl_.reissues_);
  _impl_.burns_.InternalSwap(&other->_impl_.burns_);
  _impl_.sponsor_fees_.InternalSwap(&other->_impl_.sponsor_fees_);
  _impl_.leases_.InternalSwap(&other->_impl_.leases_);
  _impl_.lease_cancels_.InternalSwap(&other->_impl_.lease_cancels_);
  _impl_.invokes_.InternalSwap(&other->_impl_.invokes_);
  _impl_.private_payment_.InternalSwap(&other->_impl_.private_payment_);
  swap(_impl_.error_message_, other->_impl_.error_message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeScriptResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_getter, &descriptor_table_vrp_2finvoke_5fscript_5fresult_2eproto_once,
      file_level_metadata_vrp_2finvoke_5fscript_5fresult_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace vrp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Payment*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Payment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Payment >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_PrivatePayment*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_PrivatePayment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_PrivatePayment >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Issue*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Issue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Issue >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Reissue*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Reissue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Reissue >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Burn*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Burn >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Burn >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_SponsorFee*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_SponsorFee >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_SponsorFee >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Lease*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Lease >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Lease >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_LeaseCancel*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_LeaseCancel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_LeaseCancel >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_ErrorMessage*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_ErrorMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_ErrorMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Call_Argument_List*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Call_Argument_List >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Call_Argument_List >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Call_Argument*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Call_Argument >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Call_Argument >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Call*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Call >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Call >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult_Invocation*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult_Invocation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult_Invocation >(arena);
}
template<> PROTOBUF_NOINLINE ::vrp::InvokeScriptResult*
Arena::CreateMaybeMessage< ::vrp::InvokeScriptResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vrp::InvokeScriptResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
